@using Aqua.BTCPayPlugin
@using Aqua.BTCPayPlugin.Views
@using BTCPayServer.Abstractions.Extensions
@model Aqua.BTCPayPlugin.Controllers.ImportWalletsViewModel
@{
    ViewData.SetActivePage(PluginNavPages.AquaImportWallets, "Import Wallets from Aqua");
}
<h1>@ViewData["Title"]</h1>

@if (Model.QrCode == null)
{
    <form id="walletSettingsForm" method="post">
        <div class="form-group my-4">
            <div class="d-flex align-items-center">
                <input asp-for="BtcChain" type="checkbox" class="btcpay-toggle me-3"/>
                <label asp-for="BtcChain" class="form-check-label"></label>
            </div>
            <span asp-validation-for="BtcChain" class="text-danger"></span>
        </div>
        @Html.HiddenFor(a=>a.LiquidSupportedOnServer)
        @if (!Model.LiquidSupportedOnServer)
        {
            <div class="form-group my-4">
                <label class="form-check-label text-danger">Liquid not supported on the server</label>
            </div>
        }
        <div class="form-group my-4">
            <div class="d-flex align-items-center">
                <input asp-for="BtcLn" type="checkbox" class="btcpay-toggle me-3" disabled="@(!Model.LiquidSupportedOnServer)" />
                <label asp-for="BtcLn" class="form-check-label"></label>
            </div>
            <span asp-validation-for="BtcLn" class="text-danger"></span>
        </div>
        <div class="form-group my-4">
            <div class="d-flex align-items-center">
                <input asp-for="LiquidChain" type="checkbox" class="btcpay-toggle me-3" disabled="@(!Model.LiquidSupportedOnServer)" />
                <label asp-for="LiquidChain" class="form-check-label"></label>
            </div>
            <span asp-validation-for="LiquidChain" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary" text-translate="true">Submit</button>
    </form>
}
else
{
    <p>Scan this QR code with Aqua wallet</p>
    <p>
        <vc:qr-code data="@(Model.QrCode)" />
    </p>
    <script>
    document.addEventListener("DOMContentLoaded", function() {
        const otp = "@Model.Otp";
        const statusUrl = "@Model.QrCode"
                .replace("/aqua/samrockprotocol", "/aqua/samrockprotocol/status").split('?')[0]
                + "?otp=" + otp;

        async function pollStatus() {
            try {
                const response = await fetch(statusUrl);
                if (response.ok) {
                    const data = await response.json();
                    if (data.status === "true") {
                        // Handle the successful import
                        alert("Wallet import completed successfully.");
                        location.reload();
                    } else if (data.status === "false") {
                        // Handle the unsuccessful import
                        alert("Wallet import failed.");
                    } else {
                        // Continue polling if status is null or not present
                        setTimeout(pollStatus, 1000);
                    }
                } else {
                    console.error("Failed to fetch status:", response.statusText);
                }
            } catch (error) {
                console.error("Error fetching status:", error);
            }
        }

        pollStatus();
    });
    </script>
    @if (AquaPlugin.IsDevMode)
    {
        <div class="form-group my-4">
            <label for="qrCodeValue">QR Code Value:</label>
            <input type="text" id="qrCodeValue" class="form-control" value="@Model.QrCode" readonly />
        </div>
    }
}